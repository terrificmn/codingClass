.component {
  width: 50%;
  border: 1px solid burlywood;
  font-size: 2rem;
}

.title {
  /* padding: 0.5em; 전체*/
  padding: 0.5em 0.5rem; /*수직(위아래) 수평(양쪽)*/
  /*양쪽의 padding에는 rem으로 줘서 부모에 영향이 없게 하면
    수평적으로 동일한 비율로 패딩이 잡히고 
    title과 contents의 위아래로 동일한 패딩이 되는 결과가 나온다
    */
  background-color: burlywood;
}

.contents {
  font-size: 1rem;
  padding: 0.5em 0.5em; /*현재 폰트이즈 1rem의 절반이 padding으로 들어가게 됨*/
  /*패딩을 em으로 주면 폰트 사이즈에 따라서 변하는데 
  이때 브라우저 크기에 따라서 바껴서 패딩이 변화하는데 title 과 contents의 폰트사이즈가 
  다르기 때문에 padding역시 더 적은 비율의 패딩이 contents에는 들어가게 된다
  수평적(양옆의 패딩) 0.5rem을 주어서 부모에 영향을 안받게 만들면 
  반응형으로 만들었을 때 수직적 패딩을 유지가 되는 것을 알 수 있다 */
  /*양쪽의 padding에는 rem으로 줘서 부모에 영향이 없게 하면
    수평적으로 동일한 비율로 패딩이 잡히고 
    title과 contents의 위아래로 동일한 패딩이 되는 결과가 나온다
    */
}

@media screen and (max-width: 780px) {
  .component {
    font-size: 1.5rem;
  }
}
