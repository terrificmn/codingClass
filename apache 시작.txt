------------------------------------------------------------------
페도라에서 LAMP 설치
Linux
Apache
Mariadb (or mysql)
Php



------------------------------------
HTTPD (apache) 설치
$ sudo dnf -y install httpd
서버 시작은
$ systemctl start httpd.service 

참고
https://docs.fedoraproject.org/en-US/quick-docs/getting-started-with-apache-http-server/index.html





php 설치 (common extensions 포함)
$ sudo dnf -y install php php-cli php-php-gettext php-mbstring php-mcrypt php-mysqlnd php-pear php-curl php-gd php-xml php-bcmath php-zip


php 버전 확인
$ php -v




mariadb 설치
$ dnf install mariadb-server
(아마도 sudo 를 앞에 쳐서 권한 얻어야 함)

참고:
https://fedoraproject.org/wiki/MariaDB



ftp (vsftp)
설치
yum install vsftpd -y

시작
systemctl start vsftpd
systemctl enable vsftpd

방화벽 설정
firewall-cmd --permanent --add-service=ftp
firewall-cmd --reload


ftp접속은 브라우저에서 
ftp://192.168.11.128
(root 계정)아이디 비번 치면 들어갈 수 있다.

환경설정
$sudo vim /etc/vsftpd/vsftpd.conf

파일에서 anonymous_enable=NO 로 수정한 후 나온다.
* 저장은 : 누른 후 wq

$systemctl restart vsftpd

그 다음
ftp를 이용할 계정을 하나 만들어 준다.
sudo useradd ftpuser   (ftpuser 명으로 계정 하나 만듬)
sudo passwd ftpuser    (ftpuser 의 비번 설정)
** 궁금할 때는 --help  (예: useradd --help)

다시 브라우저에서 접속
새로운 계정과 비번으로 접속할 수 있다.

home 다이렉트 보기
$cat /etc/passwd | grep ftpuser
그러면 결과물로 /home/ftpuser 라고 나오는 것을 볼 수 있다.

금지 유저 리스트 보기 -리스트에 이름을 적으면 못들어 감
$cat /etc/vsftpd/user_list

한번 ftp에 접속하게 되면 up to higher level directory 로 클릭해서 전체를 다 볼 수 있으므로 설정을 해줘야함 
$sudo vim /etc/vsftpd/vsftpd.conf

#chroot_local_user=yes 이 부분이 주석 처리 되어 있는데 주석을 없애준다.



(비추천!!)
ftp 계정 홈 디렉토리를 /var/www/로 바꾸고 싶다면
$sudo usermod --home /var/www ftpuser (계정이름)

다시 시작
$systemctl restart vsftpd




vscode 설치
rpm으로 설치 시 (RedHat Package Manager)
*참고 
    RPM is free and released under GPL (General Public License).
    RPM keeps the information of all the installed packages under /var/lib/rpm database.
    RPM is the only way to install packages under Linux systems, if you’ve installed packages using source code, then rpm won’t manage it.
    RPM deals with .rpm files, which contains the actual information about the packages such as: what it is, from where it comes, dependencies info, version info etc.


$sudo rpm -ivh 파일명.rpm

옵션 설명
-i : install a package
-v: verbose for a nicer display
-h: print hash marks as the package archive is unpacked




--------------
권한 바꾸기
/var/www/html/ 권한이 drwxr-xr-x, 2 root root 되어 있어서 내 유저 (내 계정 ex:octa)로 로그인하고 
vscode 에디터로 편집할 때 퍼미션 에러 나는 경우

먼저 디렉토리 권한 보기
$ls -l /var/www/

$sudo chown -R octa:${USER} html
또는 
$sudo chown -R 유저네임:유저네임 html

확인
$ls -l (해당 디렉토리에 이동 후 또는 경로 적어준다)
drwxr-xr-x, 2 유저네임 유저네임 으로 바뀐 것을 확인할 수 있다.




CentOS8 에서 VScode 설치하기
-vscode 홈페이지에서 다운로드하기
-Downloads 디렉토리에서 저장된 것을 rpm 명령어로 깔면 됨
예: rpm -ivh code-1.50.이런식으로파일명.rpm
* dependencies 에러가 날 때 
error: Failed dependencies:
	libXss.so.1()(64bit) is needed by code-1.50.1-1602601064.el7.x86_64
그러면 libXScrnSaver 설치해줘야 한다.

-yum install libXScrnSaver

- 그다음 다시 rpm 실행하면 됨


-----------------------------------------------SUDO 유저 추가하기
[sgtocta@localhost html]$ ls
DB_backup_Feb_20_2010.dump  index.php  learningphp  phpLesson  projects

[sgtocta@localhost html]$ ls
DB_backup_Feb_20_2010.dump  index.php  learningphp  phpLesson  projects
[sgtocta@localhost html]$ rm -d learningphp/
rm: cannot remove 'learningphp/': Permission denied
[sgtocta@localhost html]$ sudo rm -d learningphp
[sudo] password for sgtocta: 
sgtocta is not in the sudoers file.  This incident will be reported.

/etc/sudoers 파일을 루트로 로그인해서 편집을 해줘야한다
사용형식 예
사용자	호스트		명령어
root	ALL=(ALL)	ALL

유저를 추가해 주면 가능하다
sgtocta		ALL=(ALL)	ALL

*참고: 특정명령어만 사용할 수 있게 추가해줄 수 있는데
sgtocta		ALL=/sbin/shutdown, /usr/sbin/adduser
이렇게 해주면 유저 sgtocta는 shutdown, adduser 명령어만 사용할 수 있게 된다. (명령어 사이에는 ,로 구분)

[sgtocta@localhost html]$ sudo rm  -d learningphp
[sudo] password for sgtocta: 
[sgtocta@localhost html]$ ls
DB_backup_Feb_20_2010.dump  index.php  phpLesson  projects


--------------------------------------------
sql dump파일 복원시키기
그전에 database를 하나 먼저 만든다음에.. pf2010이라고 만듬
mysql -u root -p pf2010 < /저장된장소/DB_backup_Feb_10_2010.dump
pf2010은 dbname



--------------- phpmyadmin 설치 중.. 에러  (mysqli: extension)
I receive an error about missing mysqli and mysql extensions.
php-mysql 을 설치하면 거의 해결됨
$sudo yum install php-mysql

To connect to a MySQL server, PHP needs a set of MySQL functions called “MySQL extension”. This extension may be part of the PHP distribution (compiled-in), otherwise it needs to be loaded dynamically. Its name is probably mysqli.so or php_mysqli.dll. phpMyAdmin tried to load the extension but failed. Usually, the problem is solved by installing a software package called “PHP-MySQL” or something similar.

There are currently two interfaces PHP provides as MySQL extensions - mysql and mysqli. The mysqli is tried first, because it’s the best one.



------------php.ini 의 error메세지 셋팅 ---
웹 브라우저에서 에러 메세지가 안나올 때 php.ini 파일의 display_startup_errors = Off 를 On으로 바꿔준다
***참고 CentOs8에서는 /etc/php.ini 파일이 위치한다 (phpinfo();함수를 사용하면 위치를 알 수 있기도 하다...)


--------------------------
특히 대부분 리눅스 웹서버 세팅에서는 쓰기 권한이 필요한 경우에도 디렉토리 권한을 755로 설정하라는 안내가 많기 때문에 move_uploaded_file 함수가 이미지 파일을 옮길 수가 없게 된다.

757로 설정하고 나면 업로드가 잘 된다.

단, 디렉토리에 익명 쓰기 권한을 주고 나면 반드시 확장자 체크 등을 통해서 악성 파일이 업로드되는 것을 막아야 하고 가급적이면 익명 쓰기 권한을 주는 폴더를 최소화해야 한다.

chmod 0757 디렉토리명 
예: $chmod 0757 uploads
*** 이렇게 하면 
drwxr-xr-x. 2 sgtocta sgtocta    6 Nov 17 18:22  uploads (사용 전)
drwxr-xrwx. 2 sgtocta sgtocta    6 Nov 17 18:22  uploads (사용 후)
변경이 되는것을 알 수 있고, php 에서도 move_uploaded_file()을 사용해도 파일이 잘 저장된다.

other users 권한도 7로 줬기때문에 읽기쓰기실행 다 되므로 보안상 문제일 수 있는데, 안 그러면 move_uploaded_file()함수로 저장이 안되서
더 좋은 방법이 있는지는 추후 찾아봐야겠다. -20.11.18
--------------------------


phpmyadmin  에러
The secret passphrase in configuration (blowfish_secret) is too short. 경우
$ sudo vi /usr/share/phpmyadmin/config.inc.php

아래 부분을 
$cfg['blowfish_secret'] = '84657495123845128452'; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */
길게 32케릭터로 바꿔준다
(Replace the secret with a random string that is at least 32 characters long:)

예:
$cfg['blowfish_secret'] = 'superadmin'; 이렇게 되어 있던 것을
$cfg['blowfish_secret'] = 'superadmin0123456789superadminlong'; 요렇게 바꿈


-----------------------------------------
php.ini 에러 메세지 (브라우저에서) 나오게 하기

$vi /etc/php.ini 연다

error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT 부분을 찾는다 
각각 &로 구분하고 ~를 붙이면 관련된 에러메세지는 표시하지 않게 됨  
***참고: http://php.net/error-reporting
PHP 5.3 or later, the default value is E_ALL & ~E_NOTICE & ~E_STRICT & ~E_DEPRECATED. 
This setting does not show E_NOTICE, E_STRICT and E_DEPRECATED level errors.

그 다음
display_errors = Off 를 display_errors = On 으로 바꿔주고 

그 후 PHP-FPM 서비스를 재시작 해줘야한다
$systemctl restart php-fpm  또는 service php-fpm restart

***참고: 
***사이트가 실제 돌아가는 상황이라면 보안상 display_errors를 off로 하는게 좋다고 함
대신에 php코드에 ini_set을 나오게 할 수는 있다.
<?php 
error_reporting(E_ALL);
ini_set('display_error', '1');
?>

-----------------------------------------
일단 postfix는 지우고 다시 sendmail로 돌아감
Postfix is one of the most popular open-source Mail Transfer Agent (MTA) which route and delivers mails. It is an alternative to Sendmail MTA which comes pre-installed in all version before Centos/RHEL 5. CentOS Postfix installation is a process which requires a lot of precision.
Postfix 설치


sendmail 제거
$rpm -qa | grep sendmail
있으면 지우는게 좋다. 
$sudo yum remove sendmail*

그 다음 postfix 깔기
마찬가지로 rpm -qa | grep postfix 로 깔려 있는지 확인한 후 
$sudo yum install postfix

설정
$ sudo vim /etc/postfix/main.cf
주석 제거 후 추가
myhostname = mail.example.com
mydomain = example.com
myorigin = $mydomain

inet_interfaces = all 
(localhost 에서 all변경)
inet_protocols = all

mydestination = $myhostname, localhost.$mydomain, localhost
(주석처리제거)

mynetworks = 192.168.1.0/24, 127.0.0.0/8
추가 및 변경
home_mailbox = Maildir/
주석 제거

: 누른 후 qa 로 저장 후 나가기

$systemctl enable postfix
$systemctl restart postfix

그 다음 dovecot 깔기
yum
환경설정 /etc/dovecot/dovecot.conf
------------------------------------------
/etc/hostname 
이 원래 localhost.localdomain 으로 되어 있었음



------------------------------
----------------------------
composer 설치 (php 관리도구 dependency)
(아예 su 권한으로 시작는게 좋다)
$su-

https://getcomposer.org/download/
Command-line installation 설치 법을 참고해서 할 것

1. php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
---->Download the installer to the current directory
---->현재 위치한 디렉토리에 받아지는거에 유의 (어차피 나중에 지워짐)

2.php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
---> Verify the installer SHA-384
---> 이 명령어 붙여넣기 하면 다운받은 인스톨러를 확인
--->그러면 Installer verified 라고 나옴

3. php composer-setup.php
--->Run the installer
--->여기서 다른 옵션값을 넣어서 해주는것이 좋다. 
--->디렉토리와 파일이름이 composer.phar 기본값으로 되어 있어서 옵션으로 바꿔주는것이 좋다.(이번에 설치할때 디렉토리만 변경, 파일네임은 변경못함)
--->예: 
첫번째 디렉토리 변경 옵션 --install-dir
(You can install composer to a specific directory by using the --install-dir option and providing a target directory. Example:)
$php composer-setup.php --install-dir=bin

파일 네임 변경 옵션 --filename
(You can specify the filename (default: composer.phar) using the --filename option. Example:)
$php composer-setup.php --filename=composer
결과: 디렉토리 지정안했을 경우
All settings correct for using Composer
Downloading...
Composer (version 2.0.8) successfully installed to: //composer.phar
Use it: php composer.phar
결과: 디렉토리 bin으로 지정했을 경우 아래처럼 나온다
All settings correct for using Composer
Downloading...
Composer (version 2.0.8) successfully installed to: /usr/bin/composer.phar
Use it: php bin/composer.phar

4. php -r "unlink('composer-setup.php');"
Remove the installer 

----------------------
composer를 이용해서 Swift Mailer 다운로드
---swift mailer 기능은 
Swift Mailer can be used with any PHP framework, and then easily integrated with an external SMTP like Gmail as well as popular email providers like Mandrill, SendGrid, or Mailgun.
원래 기본sendmail은 외부stpt를 허용 안한다고 하는데 외부smtp를 사용하기 위한 
요런게 가능하다고 함 
    create complex HTML/multipart templates 
    add attachments and embed images
    send emails via authenticated SMTP, sendmail, Postfix, or your own transport
    use additional plugins.
참고 사이트: 
https://blog.mailtrap.io/swiftmailer-sendmail/


중요!!! 다운로드 그리고 디렉토리 이동해서 할것 그곳에서 설치가 됨
composer를 인스톨 할 때 --filename으로 이름변경 안했다면 디폴드는 composer.phar 임에 주의 변경했다면 composer로 하면 됨
$sudo composer.phar require "swiftmailer/swiftmailer:^6.0"
또는 ($ composer require "swiftmailer/swiftmailer:^6.0")

지우기는 
For example, in the composer.json, let says we want to remove the yii2-date-range extension. Simply manually remove the “kartik-v/yii2-date-range”: “dev-master” line from the composer.json and save then run composer update in the terminal.


"require": {
    "php": ">=5.4.0",
    "yiisoft/yii2": "~2.0.6",
    "yiisoft/yii2-bootstrap": "~2.0.0",
    "yiisoft/yii2-swiftmailer": "~2.0.0",
    "dmstr/yii2-adminlte-asset": "2.*",
    "yiisoft/yii2-jui": "*",
    "wbraganca/yii2-dynamicform": "*",
    "kartik-v/yii2-mpdf": "dev-master",
    "miloschuman/yii2-highcharts-widget": "dev-master",
    "guzzlehttp/guzzle": ">=4.1.4 <7.0",
    "yiisoft/yii2-imagine": "^2.1",
    "kartik-v/yii2-date-range": "dev-master"
},
In the terminal, just run this command after removing the extension information in the composer.json. It may take a few minutes since the command may update other extensions in the composer.json as well.


$sudo composer.phar update 
를 하면 업데이트가 되면서 지워진다


permission denied 일때 

We had this problem and the cause turned out to be a SELinux setting that prevents Apache and therefore PHP from opening any outgoing socket connections. We had disabled it but forgot the -P parameter so it was reverted in the next reboot. If you are using CentOS, RHEL or some other SELinux enabled distribution, this is a likely cause for the problem.

The connection restriction can be disabled with this command:
$sudo setsebool -P httpd_can_network_connect on

이렇게 치면
$getsebool httpd_can_sendmail
결과 httpd_can_sendmail --> off
다시 이렇게 명령어 입력
$sudo setsebool -P httpd_can_sendmail 1
결과 httpd_can_sendmail --> on


-------------------------------
--------------------------------

sendmail 설치 및 설정 참고사이트: http://www.tuxfixer.com/configure-sendmail-mta-on-centos8-to-work-as-smtp-relay/
sendmail 자체로 외부 smtp 이용해서 메일 보내는 것 확인 (텍스트만) 

0. Prerequisites

Sendmail daemon requires configured hostname for proper operation.
Set hostname for your host (if not already set):
현재 나는 호스트명은 안바꾸고 했음. 결론 메일은 보내짐 (보낸사람 : 내아이디@localhost.localdomain 이렇게 메일 감)
***중요: 호스트명을 바꾸면 sendmail 이 뭔가 문제가 생기는 듯 엄청 느려지고 결국 메일 전송이 안됨 mailq도 응답이 없고
호스트명 바꿔었다가 다시 localhost로 바꾸었더니 다시 sendmail restart가 됨
호스트명 바꾸는 것은 일단 참고로만 알고 있어야할 듯. 어딘가에서 호스트명이 conflict 되는 듯 httpd와?? 
[root@chronos ~]# hostnamectl set-hostname chronos

Include your hostname in /etc/hosts file:

[root@chronos ~]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 chronos
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

 
1. Install sendmail service

Install sendmail and corresponding RPM packages:
– sendmail-cf package includes configuration files required to generate sendmail.cf configuration file.
– cyrus-sasl-plain package contains the Cyrus SASL plugins which support PLAIN and LOGIN authentication.
sendmail-cf는 sendmail.mc 설정파일을 sendmail.cf 로 만들려면 필요

[root@chronos ~]# dnf install sendmail sendmail-cf cyrus-sasl-plain

Note: If you don’t have cyrus-sasl-plain package installed and your SMTP relay host requires authentication, you might encounter the following error in sendmail log:

Jan 05 00:37:07 chronos sendmail[758]: 004NXT6g000357: AUTH=client, available mechanisms do not fulfill requirements

2. Generate authentication information for SMTP relay

Create authinfo text file containing SMTP relay authentication info:

[root@chronos ~]# touch /etc/mail/authinfo
authinfo 파일을 만들고 로그인 정보 한줄 추가

Edit the file, provide SMTP Relay FQDN and authentication credencials:

AuthInfo:ssl0.ovh.net "U:root" "I:admin@tuxfixer.com" "P:XXXXXXXXX" "M:LOGIN PLAIN"
ss10.ovh.net 대신에 smtp.daum.net 으로 함
where:
I: account username at your ISP
P: account password at your ISP

Generate the authentication database, based on authinfo text file (this will overwrite existing /etc/mail/authinfo.db file):

[root@chronos ~]# cd /etc/mail/
[root@chronos mail]# makemap hash authinfo < authinfo
암호화 시킴
Change permissions of both authinfo and authinfo.db files (read/write access for root only):

[root@chronos ~]# chmod 600 /etc/mail/authinfo*

3. Modify sendmail configuration source file

Edit sendmail.mc source file (DO NOT edit resultant sendmail.cf configuration file):

[root@chronos ~]# vim /etc/mail/sendmail.mc

Uncomment and modify SMART_HOST related line:
define(`SMART_HOST', `ssl0.ovh.net')dnl

주석 dnl 제거 후 수정하면 됨 (smtp서버 이름을 적어준다
dnl define(`SMART_HOST', `smtp.your.provider')dnl (원래 이상태)
define(`SMART_HOST', `smtp.daum.net')dnl


Add authentication database file related line to let the sendmail daemon find authentication credencials:
또 한줄 추가 
FEATURE(`authinfo', `hash -o /etc/mail/authinfo.db')dnl

Regenerate /etc/mail/sendmail.cf file:

[root@chronos ~]# /etc/mail/make

4. Launch the sendmail service

Start and enable sendmail daemon:

[root@chronos ~]# systemctl start sendmail
[root@chronos ~]# systemctl enable sendmail

Verify, if sendmail started successfully:
상태 보려면
[root@chronos ~]# systemctl status sendmail

5. Test the e-mail delivery via SMTP Relay

Now it’s time to test sendmail functionality and send test e-mail from Linux command line.
Prepare example e-mail body:

[root@chronos ~]# echo "Subject: Mail Delivery Test" > /tmp/mail.txt
[root@chronos ~]# echo "This is the example e-mail body" >> /tmp/mail.txt
이렇게 하거나 
그냥 tmp디렉토리 안에 mail.txt를 하나 만들어서 위의 문장을 넣어 줘도 될 듯

Send the test e-mail using sendmail command:

[root@chronos ~]# sendmail -v admin@tuxfixer.com < /tmp/mail.txt
여기서는 #sendmail -v 다음계정 < /tmp/mail.txt

I am using -v parameter for increased verbosity (to see the whole communication with SMTP relay server).

You can also check systemd journal to see if the e-mail was sent successfully:

[root@chronos ~]# journalctl -f -u sendmail
...
Jan 05 22:19:26 chronos sendmail[30978]: STARTTLS=client, relay=ssl0.ovh.net., version=TLSv1.2, verify=OK, cipher=ECDHE-RSA-AES256-SHA, bits=256/256
Jan 05 22:19:27 chronos sendmail[30978]: 005LJPGI030976: to=, ctladdr= (1000/1000), delay=00:00:02, xdelay=00:00:01, mailer=relay, pri=120375, relay=ssl0.ovh.net. [193.70.18.144], dsn=2.0.0, stat=Sent (Ok: queued as 04209DE605A0)

Finally, check the recipient’s Inbox (or SPAM box), the test e-mail should be delivered successfully.

Additionally, to see mail queue, execute the command:

[root@chronos ~]# mailq

하면 mailq 에 나오는게 없음

결론: daum으로는 잘 감 (대신 스팸 메일함으로 분류됨)
naver는 아예 안감 (block됨) - #mailq 치면 요렇게 나옴
0BBFBiHA076527       31 Fri Dec 11 07:11 <sgtocta@localhost.localdomain>
                 (Deferred: 421 4.3.2 Your ip blocked from this server Zb9rWjY)
					 <내계정@naver.com>


***참고:
현재 authinfo.db는 지웠고 authinfo 파일 내용도 지워놓음
sendmail 만으로 메일보내려면 다시 authinfo 만들고, hash해야함

---------------------------------------------

아아아아ㅠㅠ
역시 composer 메일 library 를 사용해야함!!! swiftmailer 로 성공함!
smtp 주소와 port번호, ssl 설정하고
보내는 메일주소 아이디다음 이메일 주소로 했더니 메일 전송 성공! 아 ㅠㅠ 눈물난다 ㅋㅋ 네이버 다음 다 보내짐

그리고 이상하게 왜 되는지 모르겠지만 php mail()함수가 계속 안되다가 다음으로 보낸것은 전송성공
알 수가 없다 ㅡㅡ;
메일이 온 후 다시 테스트 해보았더니 또 안됨
host명을 바꿔서 sendmail 자체가 좀 이상해짐 ---다시 localhost로 바꿈 
hostnamectl 로 바꾸면 /etc/hosts 에 변경이 안되서 sendmail이 이상해지는 듯
/etc/hosts에도 추가해주니 sendmail 자체는 정상화 됨
그래도 메일은 안감
호스트명은 상관없는 듯
알 수가 없다 ㅡㅡ; 암튼 이래저래 검색해도 안된다.. sendmail로 php mail함수 사용하는 것은 일단 포기해야겠다 
(authinfo authinfo.db 지움)

참고: 왜? sendmail이 smtp ssl 을 사용하는 것에는 안되는 이유
An important limitation is immediately evident: there is in fact no way to specify a username and an authentication password for the SMTP server, a condition that is now indispensable in almost all the servers made available to Italian and international providers, as well as absolutely mandatory if we want to make use of a server that only accepts connections protected by secure layer SSL/TLS.

Ultimately, PHP’s native functionality allows you to connect only to an SMTP server that allows you to use it without authentication. 

============================================
===========================================
mailq에 쌓인것 지우기 

#mailq                                   <------메일큐가 얼마나 쌓였는지 확인한다.


# cd /var/spool/mqueue        <------입력하여 해당 디렉토리에 들어갑니다.

# pwd                                    <------pwd라는 명령어로 자신이 접속되있는 디렉토리를 확인합니다.
/var/spool/mqueue


#rm -rf *                                

#mailq                                   <-----해당 명령어로 수치가 줄어든점 확인이 됩니다.




---------------
sql 특정 컬럼 숫자 +1 시켜주기 (UPDATE 쿼리)

* likehits는 컬럼

likehits = '+1' will not actually add one to a field instead it will just assign literal +1 to likehits column value.

In order to add 1 try this

UPDATE article 
SET likehits = likehits + 1
WHERE id ='129'

However, it looks like likehits column is of type nvarchar, if so then try this (assuming likehits column stores only numbers)

UPDATE article 
SET likehits = CAST((CAST(likehits AS INT) + 1) AS nvarchar(64)) 
WHERE id ='129'



--------------------------------------
mysqldump 이용 백업하기
$su -  (root권한이 있어야지 실행이됨, sudo로는 permission denied 됨)
#mysqldump -u root -p 디비이름 > 파일명.sql
----위 커맨드를 실행하면 mariadb 암호를 물어본다. 암호입력 후 현재 디렉토리에 생성이 된다
실행 예:
#mysqldump -u root -p phplesson > backup_php2020-12-30.sql



-----------------------------------------
yum 으로 python 설치하기는 쉬움 (설치는 안해봄 ㅡㅡ)
$sudo yum install python3
버전 확인
$python3 --version

__________________________________________
install python on linux CentOs8 (최신버전 source파일로 받아서 설치하기)

$sudo yum -y update
$sudo yum -y groupinstall "Development Tools"
$sudo yum -y install openssl-devel bzip2-devel libffi-devel
필요한것들 먼저 설치 (여기서3번째꺼 설치 안했더니 마지막 make 할때 error남)

python 사이트에서 최신 버전 다운로드 (tar)
다운로드 디렉토리에서 압축 풀기
$tar -xvf Python-파일명.tar
압축풀어진 디렉토리로 이동

Setup installation by running the configure script.
$./configure --enable-optimizations
그 다음 (시간 좀 걸림)
$sudo make altinstall 
(시간 더 걸림)

아래와 같이 나오면 설치 성공이라고 함
.....
copying build/scripts-3.8/pydoc3.8 -> /usr/local/bin
copying build/scripts-3.8/idle3.8 -> /usr/local/bin
copying build/scripts-3.8/2to3-3.8 -> /usr/local/bin
changing mode of /usr/local/bin/pydoc3.8 to 755
changing mode of /usr/local/bin/idle3.8 to 755
changing mode of /usr/local/bin/2to3-3.8 to 755
rm /usr/local/lib/python3.8/lib-dynload/_sysconfigdata__linux_x86_64-linux-gnu.py
rm -r /usr/local/lib/python3.8/lib-dynload/__pycache__
/usr/bin/install -c -m 644 ./Misc/python.man \
	/usr/local/share/man/man1/python3.8.1
if test "xupgrade" != "xno"  ; then \
	case upgrade in \
		upgrade) ensurepip="--altinstall --upgrade" ;; \
		install|*) ensurepip="--altinstall" ;; \
	esac; \
	 ./python -E -m ensurepip \
		$ensurepip --root=/ ; \
fi
Looking in links: /tmp/tmpy9yqf1bp
Collecting setuptools
Collecting pip
Installing collected packages: setuptools, pip
Successfully installed pip-19.2.3 setuptools-41.2.0
설치 성공

버전확인
$python3.9 --version

pip 버전 확인  (pip 이 무엇인고? 모름;;)
$pip3.9 --version


make 한 후 이렇게 나옴 (추후 알아봐야할 듯)
  WARNING: The script easy_install-3.9 is installed in '/usr/local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
  WARNING: The script pip3.9 is installed in '/usr/local/bin' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.

-------------------------------------------------------------


git 설치하기

(
참고:
We will be using the open-source package manager tool DNF, which stands for Dandified YUM the next-generation version of the Yellowdog Updater, Modified (that is, yum). DNF is a package manager that is now the default package manager for Red Hat based Linux systems like CentOS. It will let you install, update, and remove software packages on your server.
)

패키지 업데이트 해준다 (시간이 좀 걸릴 수 있음)
$sudo dnf update -y
( 참고** 그냥 한번에 설치 가능 (최신버전은 아님)
sudo dnf install git -y
)

하지만 소스파일로 깔았으므로 dnf로 git은 설치하지 않고 
$sudo dnf install gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel gcc autoconf curl-devel expat-devel -y

Git을 깔기위해서 dependencies를 해결해줘야하기 때문에 위에 것들을(?) 업데이트 해준다
Before you begin, you need to install the software that Git depends on. This is all available in the default repositories, so we can update our local package index and then install the packages.

설치되어 있거나 한 것은 빼고 설치함

source파일 다운받기
깃 사이트에서 git-2.9.5.tar.xz 로 소스파일 다운로드 함
그다음 압축풀기
$tar -xvf git-2.9.5.tar.xz 

그 다음에 디렉토리로 이동해서 make를 해준다 (시간 좀 걸림)
$make prefix=/usr/local all
$sudo make prefix=/usr/local install
중간에 에러가 나면 대게는 dependency가 문제 (구굴링 해볼 것)

make가 완료되면 버전확인해보면 설치가 잘 되었는지 알 수 있음
$git --version
git version 2.9.5 라고 나오면 ok!

----------------------------------------------------

Git 환경 설정


vscode 열기 (자동으로 열림)
$code .

에디터 등록하기
$git config --global core.editor "code --wait"
또는 
$git config --global core.editor "code"

***차이점은 git config파일을 열어 볼려고 할 때 vscode에디터에서 환경설정 파일이 열리고 
터미널에서 또 작업을 할 수 있으나 
--wait 옵션을 주면 환경설정 파일이 저장을 하고 끄기전에는 터미널에서 작업을 할 수 없음 (즉, 터미널이 wait중)
--wait 옵션을 추천

코드에디터로 환경설정 파일 열기
$git config --global -e

이름과 이메일 등록
$git config --global user.name "Your Name"
$git config --global user.email "youremail@domain.com"

configuration 확인
$git config --list

****중요: 리눅스 input으로 설정
$git config --global core.autocrlf input
****윈도우는 true로 설정
$git config --global core.autocrlf true

줄바꿈이 일어날 때 
윈도우에서는 text \r\n (carriage-return)과 (new line feed) 일어나는 데 (줄바꿈할 때)
리눅스나 맥에서는 text \n (carriage-return)이 발생하지 않고 (new line feed)만 되므로 
윈도우와 리눅스에 서로 작업할 때 core.autocrlf 에서 자동으로 윈도우에서 저장할 때는 \r\n을 해주고
맥이나 리눅스에서는 \n 해준다고 함

리눅스는 input , 윈도우에서는 true로 설정해줘야지,
윈도우에서 작업했을 때와 리눅스에서 했을 때 서로 문제가 없도록 해줌

--------------------------------
git 주요 명령어

일단 깃을 사용할 디렉토리를 만들어 준다
/projects/git
이런식으로 만듬 (mkdir이용)

cd git 으로 이동해서
초기화시키기 (repositiory 만들어 줌)
$git init

Initialized empty Git repository in /home/sgtocta/projects/git/.git/
이렇게 나옴
이렇게 하면 local에 git 할 준비가 된 것 임

$ls -al 해서 보면
drwxrwxr-x. 7 sgtocta sgtocta 119 Jan 11 07:36 .git
요렇게 숨어 있음

git 지우려면 
$rm -rf .git


깃 상태 보기
$git status

자주 쓰는 명령어 alias 설정하기
(alias.단축으로쓸별칭 실제명령어)
$git config --global alias.st status


실제 사용해 보기
git 디렉토리에서 a.txt b.txt c.txt를 만들어 본다
$echo hello world! > a.txt
이런식으로 3개 만들고 

staus확인
$git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	a.txt
	b.txt
	c.txt

nothing added to commit but untracked files present (use "git add" to track)
이런식으로 나오게 되는데 
untracked files에 a,b,c.txt 파일이 있는 것을 알 수 있다
즉, commit명령어로 staging area로 넘어간것을 없는데 git add를 이용해서 tracked 으로 (commit할 준비를 해주는 것)

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   a.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	b.txt
	c.txt
이렇게 a.txt파일이 변경된 것을 볼 수 있음

$git add a.txt b.txt 이런식으로 해도 되고
$git add *.txt 라고 하면 모든파일.txt

여기에서 
$echo mike >> a.txt
로 파일에 내용을 추가하게 되면 
git status에 

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   a.txt
	new file:   b.txt
	new file:   c.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   a.txt
또 이렇게 나옴

즉 git add로 파일을 추가하게 되면 staged files이 되어서 staging area에 들어가게 되고
파일을 수정하게 되면
그 파일은 modified file이 되어서 untracked 상태로 되어져 있게 됨
즉 버전 별로 파일이 존재하게 됨

다시 untracked 상태로 바꾸기
$git rm --cached *

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	a.txt
	b.txt
	c.txt
요렇게 된 것을 알 수 있음


파일이 디렉토리 안에 있을 경우 
fatal: not removing 'phpClass/includes' recursively without -r
에러가 발생

[sgtocta@localhost projects]$ git rm -r --cached *
usage: git rm [<options>] [--] <file>...

    -n, --dry-run         dry run
    -q, --quiet           do not list removed files
    --cached              only remove from the index
    -f, --force           override the up-to-date check
    -r                    allow recursive removal
    --ignore-unmatch      exit with a zero status even if nothing matched
이때에는 -r 옵션을 해줘야하고 --cached 를 꼭 써야함 (index에서 제거하는것은 staging area에서 제거하는 것)
--cached를 안사용하면 파일이 지워질 수도 있다. 
테스트 해봐야할 듯


<트러블슈팅>
디렉토리가 포함되었을 때는 
$gir rm -r --cached phpClass/*
으로 해주면 됨



트랙킹 하기 싫은 파일 (추가하기 싫은 파일)은 .gitignore 에 넣어준다
예를 들어서 test.log 파일이 있다고 했을 때
$echo test > test.log
$echo *.log > .gitignore
을 하게 되면 
$ls -al 
을 하면
.gitignore 이 생겨있고 
staus에서 untracked files 로만 나오고 test.log 파일을 추적이 안되고 있음을 알 수 있다
(.gitignore 에 파일형태로 추가할 수 있음)
( 
예를 들어 vi .gitignore 을 열어서 
파일명을 직접 써주거나
파일에서는 주석 가능 #으로 주석
test.log
또는 특정확장자의 모든파일 
*.log

특정디렉토리 
build/

특정디렉토리의 특정 파일들
build/*.log 
이렇게 넣어주면 된다고 함
)

특정디렉토리의 모든 파일
phpClass/uploads/*


변경된 사항 확인
$git diff
파일이 변경되었다면 

diff --git a/a.txt b/a.txt
index 7a6f78f..4606027 100644
--- a/a.txt
+++ b/a.txt
@@ -1,2 +1,3 @@
 hello world!
 mike
+add txt
이런식으로 나옴


깃 config파일 열어서 설정 추가해주기
$git config --global -e
해서 vscode가 열리면 파일에 추가해줌
[diff]
	tool = vscode
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE


그 저장하고 끔. 터미널에서 
$git difftool
이라고 치면 (modified 된 파일이 있다면
Viewing (1/1): 'a.txt'
Launch 'vscode' [Y/n]
으로 나오게 됨 y하면 vscode가 열림

staging area에 있는 파일들 볼려면
$git difftool --staged

마찬가지로 해당파일을 vscode에서 열겠냐고 물어보고 열어서 확인하면 됨


$git commit 을 치면
vscode로 staging area 에 있는 파일이 commit되기 위한 파일이 열림
그럼 맨 위에 Title과 Description을 넣어주고 저장하면 commit이 됨 (git repository에 넘어가게됨)

Title

Description

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
#
# Initial commit
#
# Changes to be committed:
#	new file:   a.txt
#	new file:   b.txt
#	new file:   c.txt
#
# Changes not staged for commit:
#	modified:   a.txt
#
# Untracked files:
#	.gitignore
#


그러면 
[master (root-commit) b1b5c42] Title
 3 files changed, 4 insertions(+)
 create mode 100644 a.txt
 create mode 100644 b.txt
 create mode 100644 c.txt
b1b5c42 해쉬코드 앞부분과 Title이 나오게 됨 
그리고 3개 파일이 created 파일이 생겼다고 나옴

히스토리 보기
$git log

commit b1b5c427d6a6d54043dc75c502e63b99a45dcdac
Author: mike <mildsm@gmail.com>
Date:   Mon Jan 11 08:33:25 2021 -0800

    Title
    
    Description

실제 해쉬코드 전체와 만든사람, 날짜, 타이틀, 설명까지 나오게 됨


간단하게 commit 하기는  -m 을 넣어서 가능

일단 파일을 한개 더 추가한다고 생각하고
$echo test add > d.txt
파일만들고 다시 git add  시켜줌
$git add . 또는 $git add 파일명.확장자

$git commit -m "second commit"
라고 치면

[master b58d728] second commit
 1 file changed, 1 insertion(+)
 create mode 100644 d.txt
바로 실행되는 것을 알 수 있음


간단하게 커밋 옵션 -a는 전부다 (git add로 안하고 staging area와 working directory에 있는 전부다 
모든 게 맘에 든다고 했을 떄 )
$git commit -am "third commit"


Add 취소하기
모든 file staging 취소하기
$git reset 

git reset HEAD file명으로 add한 file을 취소할 수 있고 file명을 쓰지 않으면 전체 파일 취소가 된다!
(HEAD는 지금 현재 최신상태)




remote (원격 저장소) 연결하기
git remote add origin https://github.com/(본인계정or계정)/(repository_name)coding.git

$git remote add origin https://github.com/terrificmn/coding.git

이렇게 origin으로 한번 저장해놓으면 다음부터는 origin만 사용해서 remote에 접속가능

지우기 (원격저장소)
git remote remove origin


push 하기
$git push origin main 또는 (master) 현재 저장소에서는 main이 branch default로 되어 있음
**참고: 원래 master였으나 인종차별로 main으로 바꾸기로 하였다고 함

[rejected]        main -> main (non-fast-forward) 일 경우

$ git fetch origin




Viewing branches (-a 옵션 모든 branches 보기)
$git branch -a

결과는 * master 로 나옴

새로운 branch 만들기 (-b 옵션 뒤에는 만들고 싶은 브랜치명)
$git checkout -b develop

-->결과: Switched to a new branch 'develop'

다시
$git branch -a 하면
* develop
  master
으로 변경 되어 나오는 것을 알 수 있음

브랜치 바꾸기
$git checkout master
or
$git checkout develop


remote 로 쓰기 전에 파일을 remote add 로 추가하기
(git remote add <name> <url>
git remote add devlop https://github.com/terrificmn/test.git

만약, fatal: The current branch develop has no upstream branch.
remote에 해당 브랜치가 없으면 만들어야하고 remote에서 upstream으로 쓰기 원하면
git push --set-upstream devlop develop

깃 올리기 (git push <name>)
$git push devlop
remote add 로 등록했던 devlop이 올라가진다



처음에 local에 git을 init을 한 다음에 
remote에 파일을 push하려면 에러가 남, remote에 이미 만들어져있는 readme.md 파일 등이 local에는 없어서 그렇다고 하는데
해결하려면 아래 처럼 해야함 
안 됨 ...;;; 으아아아아아ㅏ ㅠㅠ

This error occurs when you push the data from your local directory to your remote git repository by following git command: git push -u origin master

As local directory and git remote directory's files conflicted.

Solution :

After committing all files to staging follow below steps.

    Fetch the files from the remote repository as its conflict with the local working directory.
        git pull <remoter-url> <branch-name>

    Commit the changes again.
        git add -A
        git commit -m ‘<comment>'

    After committed merge files with both directory you can use
        git push -u origin master

This will fix the issue. Thanks.





*** git 공식 사이트에서 reference에서 주요 명령어를 확인해 볼 수 있음


<트러블슈팅>
Gtk-Message: 04:29:58.177: Failed to load module "canberra-gtk-module"
Gtk-Message: 04:30:01.473: Failed to load module "canberra-gtk-module"

[sgtocta@localhost projects]$ git push origin main
To https://github.com/terrificmn/codingClass.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/terrificmn/codingClass.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

이런 문제가 생기는 이유는 non-fast-forward 라고 하는데 
remote와 local의 commit이 일치하지 않아서 그렇다고 함
무조건 올리는 족족 할 수 있는 줄 알았는데 아닌 듯 


$git pull --rebase origin main
을 하면
conflict가 있는 것을 해결 후 
--continue 또는 --skip을 하라고 되어 있는데 
일단 --continue를 해야하나 바꿀게 따로 없어서 그냥 skip
$git rebase --skip
을 했다

그 다음에 다시 모든 staging상태로 만들기 위해서 다시 add 후 commit
$git add .
$git commit 
vscode에서 Title만 적어주고 저장 후 나감

git status 하니 깔끔 ㅠ
$git status
On branch main
nothing to commit, working tree clean

마지막으로 remote저장소에 push
$git push origin main

Counting objects: 106, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (105/105), done.
Writing objects: 100% (106/106), 68.87 KiB | 0 bytes/s, done.
Total 106 (delta 4), reused 0 (delta 0)
remote: Resolving deltas: 100% (4/4), done.
To https://github.com/terrificmn/codingClass.git
   7422c36..4cd8973  main -> main

<트러블슈팅 완료>

